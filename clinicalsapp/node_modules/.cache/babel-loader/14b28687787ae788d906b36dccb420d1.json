{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjects\\\\clinicalsapp\\\\src\\\\components\\\\register.component.js\";\nimport React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\nimport { Button, Container, Row, Col, Alert, Table, Navbar, Nav, NavDropdown, Carousel } from 'react-bootstrap';\nimport AuthService from \"../services/auth.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This field is required!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nconst email = value => {\n  if (!isEmail(value)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This is not a valid email.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"The username must be between 3 and 20 characters.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"The password must be between 6 and 40 characters.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nconst vpasswordconfirm = value => {\n  if (value.length < 6 || value.length > 40) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"The password must be between 6 and 40 characters.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeConfirmPassword = this.onChangeConfirmPassword.bind(this);\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      confirmpassword: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  onChangeConfirmPassword(e) {\n    this.setState({\n      confirmpassword: e.target.value\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      if (this.state.password != this.state.confirmpassword) {\n        this.setState({\n          message: \"Passwords don't match\"\n        });\n      } else {\n        AuthService.register(this.state.username, this.state.email, this.state.password).then(response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n        }, error => {\n          const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.handleRegister,\n      ref: c => {\n        this.form = c;\n      },\n      children: [!this.state.successful && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-center mt-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"username\",\n              value: this.state.username,\n              onChange: this.onChangeUsername,\n              validations: [required, vusername]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-center mt-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"email\",\n              value: this.state.email,\n              onChange: this.onChangeEmail,\n              validations: [required, email]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            className: \"form-control\",\n            name: \"password\",\n            value: this.state.password,\n            onChange: this.onChangePassword,\n            validations: [required, vpassword]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmpassword\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            className: \"form-control\",\n            name: \"confirmpassword\",\n            value: this.state.confirmpassword,\n            onChange: this.onChangeConfirmPassword,\n            validations: [required, vpasswordconfirm]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group col-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary btn-block\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 15\n      }, this), this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group col-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.state.successful ? \"alert alert-success\" : \"alert alert-danger\",\n          role: \"alert\",\n          children: this.state.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(CheckButton, {\n        style: {\n          display: \"none\"\n        },\n        ref: c => {\n          this.checkBtn = c;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["D:/ReactProjects/clinicalsapp/src/components/register.component.js"],"names":["React","Component","Form","Input","CheckButton","isEmail","Button","Container","Row","Col","Alert","Table","Navbar","Nav","NavDropdown","Carousel","AuthService","required","value","email","vusername","length","vpassword","vpasswordconfirm","Register","constructor","props","handleRegister","bind","onChangeUsername","onChangeEmail","onChangePassword","onChangeConfirmPassword","state","username","password","confirmpassword","successful","message","e","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","register","then","response","data","error","resMessage","toString","render","c","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\nimport { Button, Container, Row, Col, Alert, Table, Navbar, Nav, NavDropdown, Carousel } from 'react-bootstrap';\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = value => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpasswordconfirm = value => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n    this.onChangeConfirmPassword = this.onChangeConfirmPassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmpassword: \"\",\r\n      successful: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeConfirmPassword(e){\r\n    this.setState({\r\n      confirmpassword: e.target.value\r\n    })\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      if(this.state.password!=this.state.confirmpassword){\r\n        this.setState({\r\n          message: \"Passwords don't match\"\r\n        })\r\n      }else{\r\n      AuthService.register(\r\n        this.state.username,\r\n        this.state.email,\r\n        this.state.password\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true\r\n          });\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      \r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n\r\n            \r\n            {!this.state.successful && (\r\n              <div>\r\n                <Row className=\"justify-content-center mt-5\">\r\n                <div className=\"form-group col-2\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n                </Row>\r\n\r\n                <Row className=\"justify-content-center mt-5\">\r\n                <div className=\"form-group col-2\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n                </Row>\r\n\r\n                <div className=\"form-group col-2\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n            \r\n                <div className=\"form-group col-2\">\r\n                  <label htmlFor=\"confirmpassword\">Confirm Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"confirmpassword\"\r\n                    value={this.state.confirmpassword}\r\n                    onChange={this.onChangeConfirmPassword}\r\n                    validations={[required, vpasswordconfirm]}\r\n                    \r\n                  />\r\n                </div>\r\n            \r\n\r\n                <div className=\"form-group col-2\">\r\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group col-2\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        \r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}