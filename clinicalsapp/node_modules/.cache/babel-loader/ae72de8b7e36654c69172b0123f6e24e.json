{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjects\\\\clinicalsapp\\\\src\\\\components\\\\ChartGenerator.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport CanvasJSReact from '../assets/canvasjs.react'; //var CanvasJSReact = require('./canvasjs.react');\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass ChartGenerator extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clinicalData: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/clinicalservices/api/clinicals/\" + this.props.match.params.patientId + \"/\" + this.props.match.params.componentName).then(res => {\n      this.setState({\n        clinicalData: res.data\n      });\n    });\n  }\n\n  render() {\n    var dps2 = [{\n      x: 1,\n      y: 10\n    }, {\n      x: 2,\n      y: 13\n    }, {\n      x: 3,\n      y: 18\n    }, {\n      x: 4,\n      y: 20\n    }, {\n      x: 5,\n      y: 17\n    }, {\n      x: 6,\n      y: 10\n    }, {\n      x: 7,\n      y: 13\n    }, {\n      x: 8,\n      y: 18\n    }, {\n      x: 9,\n      y: 20\n    }, {\n      x: 10,\n      y: 17\n    }];\n    var dps1 = [];\n    var dps = [];\n    var newOjbect = [];\n    var newOjbect1 = [];\n    var Vreme = new Array();\n    var myArray = new Array();\n    this.state.clinicalData.map((item, index) => {\n      myArray.push(item.componentValue);\n      Vreme.push(item.measuredDateTime);\n    });\n    console.log(Vreme);\n    var VisokPritisok = new Array();\n    var NizokPritisok = new Array();\n    console.log(myArray);\n    var visok = myArray.join().toString();\n    console.log(visok);\n    myArray.forEach(element => VisokPritisok.push(element.split('/')[0]));\n    myArray.forEach(element => NizokPritisok.push(element.split('/')[1]));\n    console.log(\"Visok pritisok \" + VisokPritisok);\n    console.log(\"Nizok pritisok \" + NizokPritisok);\n    VisokPritisok.forEach(element => dps.push({\n      y: element\n    }));\n    NizokPritisok.forEach(element => dps1.push({\n      y: element\n    }));\n    console.log(dps1);\n    newOjbect = dps.map((item, i) => Object.assign({}, item, {\n      label: Vreme[i]\n    }));\n    newOjbect1 = dps1.map((item, i) => Object.assign({}, item, {\n      label: Vreme[i]\n    }));\n    Object.keys(newOjbect1).forEach(function (el) {\n      newOjbect1[el].y = parseInt(newOjbect1[el].y);\n    });\n    console.log(newOjbect1);\n    const options = {\n      title: {\n        text: \"Dynamic Line Chart\"\n      },\n      data: [{\n        type: \"line\",\n        dataPoints: newOjbect1\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Clinical Report:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), this.state.clinicalData.map((item, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item.componentValue\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)), /*#__PURE__*/_jsxDEV(CanvasJSChart, {\n        options: options,\n        onRef: ref => this.chart = ref\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default ChartGenerator;","map":{"version":3,"sources":["D:/ReactProjects/clinicalsapp/src/components/ChartGenerator.js"],"names":["React","axios","CanvasJSReact","CanvasJS","CanvasJSChart","ChartGenerator","Component","state","clinicalData","componentDidMount","get","props","match","params","patientId","componentName","then","res","setState","data","render","dps2","x","y","dps1","dps","newOjbect","newOjbect1","Vreme","Array","myArray","map","item","index","push","componentValue","measuredDateTime","console","log","VisokPritisok","NizokPritisok","visok","join","toString","forEach","element","split","i","Object","assign","label","keys","el","parseInt","options","title","text","type","dataPoints","ref","chart"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport CanvasJSReact from '../assets/canvasjs.react';\r\n//var CanvasJSReact = require('./canvasjs.react');\r\nvar CanvasJS = CanvasJSReact.CanvasJS;\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\nclass ChartGenerator extends React.Component{\r\n\r\n    state={\r\n        clinicalData:[]\r\n    }\r\n\r\n    \r\n\r\n    \r\n\r\n    componentDidMount(){\r\n        axios.get(\"http://localhost:8080/clinicalservices/api/clinicals/\"+this.props.match.params.patientId+\"/\"+this.props.match.params.componentName).then(res=>{\r\n\r\n            this.setState({ clinicalData: res.data });\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        var dps2 = [{x: 1, y: 10}, {x: 2, y: 13}, {x: 3, y: 18}, {x: 4, y: 20}, {x: 5, y: 17},{x: 6, y: 10}, {x: 7, y: 13}, {x: 8, y: 18}, {x: 9, y: 20}, {x: 10, y: 17}];\r\n        var dps1=[];\r\n        var dps = []; \r\n        var newOjbect= [];\r\n        var newOjbect1 =[];\r\n        var Vreme = new Array();\r\n        var myArray = new Array();\r\n        this.state.clinicalData.map((item,index)=>{\r\n            myArray.push(item.componentValue);\r\n            Vreme.push(item.measuredDateTime)\r\n\r\n        })\r\n        console.log(Vreme);\r\n        var VisokPritisok = new Array();\r\n        var NizokPritisok = new Array();\r\n        console.log(myArray)\r\n        var visok=myArray.join().toString();\r\n        console.log(visok)\r\n        myArray.forEach(element => \r\n            VisokPritisok.push(element.split('/')[0])\r\n            );\r\n\r\n        myArray.forEach(element => \r\n            NizokPritisok.push(element.split('/')[1])\r\n                 );\r\n\r\n        console.log(\"Visok pritisok \"+VisokPritisok);\r\n        console.log(\"Nizok pritisok \"+NizokPritisok);\r\n        VisokPritisok.forEach(element =>\r\n            dps.push({y:element})\r\n        )\r\n        NizokPritisok.forEach(element=>\r\n            dps1.push({y:element}))\r\n            console.log(dps1);\r\n\r\n         newOjbect = dps.map((item, i) => Object.assign({}, item, {label:Vreme[i]}));\r\n         newOjbect1 = dps1.map((item, i) => Object.assign({}, item, {label:Vreme[i]}));\r\n\r\n        Object.keys(newOjbect1).forEach(function(el){\r\n            newOjbect1[el].y = parseInt(newOjbect1[el].y)\r\n          })\r\n          \r\n        console.log(newOjbect1)\r\n        const options = {\r\n\t\t\ttitle :{\r\n\t\t\t\ttext: \"Dynamic Line Chart\"\r\n\t\t\t},\r\n\t\t\tdata: [\r\n                \r\n                \r\n                {\r\n\t\t\t\ttype: \"line\",\r\n\t\t\t\tdataPoints : newOjbect1\r\n\t\t\t}]\r\n\t\t}\t\r\n\r\n        return (<div>\r\n            \r\n            <h2>Clinical Report:</h2>\r\n            {this.state.clinicalData.map((item,index)=>(\r\n                \r\n                <p key={index}>{item.componentValue}</p>\r\n                \r\n            ))}\r\n             <CanvasJSChart options = {options}\r\n\t\t\t\t onRef={ref => this.chart = ref}\r\n\t\t\t/>\r\n\r\n            \r\n\r\n        </div>);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ChartGenerator;"]},"metadata":{},"sourceType":"module"}