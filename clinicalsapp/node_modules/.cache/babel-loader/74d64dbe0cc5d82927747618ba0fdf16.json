{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjects\\\\clinicalsapp\\\\src\\\\components\\\\ChartGenerator.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Chart from './Char';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ChartGenerator extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clinicalData: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/clinicalservices/api/clinicals/\" + this.props.match.params.patientId + \"/\" + this.props.match.params.componentName).then(res => {\n      this.setState({\n        clinicalData: res.data\n      });\n    });\n  }\n\n  render() {\n    function LineChart() {\n      const data = {\n        labes: ['Jan', 'Feb', 'Mar', 'Apr', 'May'],\n        dataSets: [{\n          labe: 'Sales for 2020(M)',\n          data: [3, 2, 2, 1, 5]\n        }]\n      };\n      return /*#__PURE__*/_jsxDEV(Line, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default ChartGenerator;","map":{"version":3,"sources":["D:/ReactProjects/clinicalsapp/src/components/ChartGenerator.js"],"names":["React","axios","Chart","ChartGenerator","Component","state","clinicalData","componentDidMount","get","props","match","params","patientId","componentName","then","res","setState","data","render","LineChart","labes","dataSets","labe"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,QAAlB;;;AACA,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA4C;AAAA;AAAA;AAAA,SAExCC,KAFwC,GAElC;AACFC,MAAAA,YAAY,EAAC;AADX,KAFkC;AAAA;;AAaxCC,EAAAA,iBAAiB,GAAE;AAEfN,IAAAA,KAAK,CAACO,GAAN,CAAU,0DAAwD,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,SAAhF,GAA0F,GAA1F,GAA8F,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBE,aAAhI,EAA+IC,IAA/I,CAAoJC,GAAG,IAAE;AAErJ,WAAKC,QAAL,CAAc;AAAEV,QAAAA,YAAY,EAAES,GAAG,CAACE;AAApB,OAAd;AACH,KAHD;AAKH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,aAASC,SAAT,GAAoB;AAChB,YAAMF,IAAI,GAAG;AAETG,QAAAA,KAAK,EAAC,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,EAAyB,KAAzB,CAFG;AAGTC,QAAAA,QAAQ,EAAC,CACL;AACIC,UAAAA,IAAI,EAAE,mBADV;AAEIL,UAAAA,IAAI,EAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb;AAFT,SADK;AAHA,OAAb;AAWA,0BACI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;;AAED,wBAAQ;AAAA;AAAA;AAAA;AAAA,YAAR;AAIH;;AA5CuC;;AAiD5C,eAAed,cAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport Chart from './Char';\r\nclass ChartGenerator extends React.Component{\r\n\r\n    state={\r\n        clinicalData:[]\r\n        \r\n    }\r\n    \r\n \r\n    \r\n    \r\n\r\n    \r\n\r\n    componentDidMount(){\r\n        \r\n        axios.get(\"http://localhost:8080/clinicalservices/api/clinicals/\"+this.props.match.params.patientId+\"/\"+this.props.match.params.componentName).then(res=>{\r\n\r\n            this.setState({ clinicalData: res.data });\r\n        })\r\n\r\n    }\r\n\r\n    render(){\r\n        function LineChart(){\r\n            const data = {\r\n\r\n                labes:['Jan','Feb','Mar','Apr','May'],\r\n                dataSets:[\r\n                    {\r\n                        labe: 'Sales for 2020(M)',\r\n                        data:[3, 2, 2, 1, 5]\r\n    \r\n                    }\r\n                ]\r\n            }\r\n            return(\r\n                <Line data={data}/>\r\n            )\r\n        }\r\n       \r\n        return (<div>         \r\n            \r\n\r\n        </div>);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ChartGenerator;"]},"metadata":{},"sourceType":"module"}