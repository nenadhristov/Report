{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjects\\\\clinicalsapp\\\\src\\\\components\\\\ChartGenerator.js\";\nimport React from 'react';\nimport CanvasJSReact from '../assets/canvasjs.react'; //var CanvasJSReact = require('./canvasjs.react');\n\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass ChartGenerator extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clinicalData: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/clinicalservices/api/patients/analyze/1\").then(res => {\n      this.setState(res.data);\n    });\n  }\n\n  render() {\n    const options = {\n      animationEnabled: true,\n      title: {\n        text: \"Number of New Customers\"\n      },\n      toolTip: {\n        shared: true\n      },\n      data: [{\n        type: \"spline\",\n        name: \"2016\",\n        showInLegend: true,\n        dataPoints: [{\n          y: 155,\n          label: \"Jan\"\n        }, {\n          y: 150,\n          label: \"Feb\"\n        }, {\n          y: 152,\n          label: \"Mar\"\n        }, {\n          y: 148,\n          label: \"Apr\"\n        }, {\n          y: 142,\n          label: \"May\"\n        }, {\n          y: 150,\n          label: \"Jun\"\n        }, {\n          y: 146,\n          label: \"Jul\"\n        }, {\n          y: 149,\n          label: \"Aug\"\n        }, {\n          y: 153,\n          label: \"Sept\"\n        }, {\n          y: 158,\n          label: \"Oct\"\n        }, {\n          y: 154,\n          label: \"Nov\"\n        }, {\n          y: 150,\n          label: \"Dec\"\n        }]\n      }, {\n        type: \"spline\",\n        name: \"2017\",\n        showInLegend: true,\n        dataPoints: [{\n          y: 172,\n          label: \"Jan\"\n        }, {\n          y: 173,\n          label: \"Feb\"\n        }, {\n          y: 175,\n          label: \"Mar\"\n        }, {\n          y: 172,\n          label: \"Apr\"\n        }, {\n          y: 162,\n          label: \"May\"\n        }, {\n          y: 165,\n          label: \"Jun\"\n        }, {\n          y: 172,\n          label: \"Jul\"\n        }, {\n          y: 168,\n          label: \"Aug\"\n        }, {\n          y: 175,\n          label: \"Sept\"\n        }, {\n          y: 170,\n          label: \"Oct\"\n        }, {\n          y: 165,\n          label: \"Nov\"\n        }, {\n          y: 169,\n          label: \"Dec\"\n        }]\n      }]\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CanvasJSChart, {\n        options: options\n        /* onRef={ref => this.chart = ref} */\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Test Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), this.state.clinicalData.map(eachEntry => /*#__PURE__*/_jsxDEV(TableCreator, {\n        item: eachEntry,\n        patientId: this.state.id\n      }, eachEntry.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 53\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nclass TableCreator extends React.Component {\n  render() {\n    var eachEntry = this.props.item;\n    var patientId = this.props.componentId;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: eachEntry.componentName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default ChartGenerator;","map":{"version":3,"sources":["D:/ReactProjects/clinicalsapp/src/components/ChartGenerator.js"],"names":["React","CanvasJSReact","axios","CanvasJS","CanvasJSChart","ChartGenerator","Component","state","clinicalData","componentDidMount","get","then","res","setState","data","render","options","animationEnabled","title","text","toolTip","shared","type","name","showInLegend","dataPoints","y","label","map","eachEntry","id","TableCreator","props","item","patientId","componentId","componentName"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport CanvasJSReact from '../assets/canvasjs.react';\r\n//var CanvasJSReact = require('./canvasjs.react');\r\nimport axios from 'axios';\r\nvar CanvasJS = CanvasJSReact.CanvasJS;\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\nclass ChartGenerator extends React.Component{\r\n\r\n    state={\r\n        clinicalData:[]\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get(\"http://localhost:8080/clinicalservices/api/patients/analyze/1\").then(res=>{\r\n            this.setState(res.data);\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        const options = {\r\n            animationEnabled: true,\t\r\n            title:{\r\n                text: \"Number of New Customers\"\r\n            },\r\n            \r\n            toolTip: {\r\n                shared: true\r\n            },\r\n            data: [{\r\n                type: \"spline\",\r\n                name: \"2016\",\r\n                showInLegend: true,\r\n                dataPoints: [\r\n                    { y: 155, label: \"Jan\" },\r\n                    { y: 150, label: \"Feb\" },\r\n                    { y: 152, label: \"Mar\" },\r\n                    { y: 148, label: \"Apr\" },\r\n                    { y: 142, label: \"May\" },\r\n                    { y: 150, label: \"Jun\" },\r\n                    { y: 146, label: \"Jul\" },\r\n                    { y: 149, label: \"Aug\" },\r\n                    { y: 153, label: \"Sept\" },\r\n                    { y: 158, label: \"Oct\" },\r\n                    { y: 154, label: \"Nov\" },\r\n                    { y: 150, label: \"Dec\" }\r\n                ]\r\n            },\r\n            {\r\n                type: \"spline\",\r\n                name: \"2017\",\r\n                showInLegend: true,\r\n                dataPoints: [\r\n                    { y: 172, label: \"Jan\" },\r\n                    { y: 173, label: \"Feb\" },\r\n                    { y: 175, label: \"Mar\" },\r\n                    { y: 172, label: \"Apr\" },\r\n                    { y: 162, label: \"May\" },\r\n                    { y: 165, label: \"Jun\" },\r\n                    { y: 172, label: \"Jul\" },\r\n                    { y: 168, label: \"Aug\" },\r\n                    { y: 175, label: \"Sept\" },\r\n                    { y: 170, label: \"Oct\" },\r\n                    { y: 165, label: \"Nov\" },\r\n                    { y: 169, label: \"Dec\" }\r\n                ]\r\n            }]\r\n    }\r\n\r\n        return (<div>\r\n                \r\n               <CanvasJSChart options = {options} \r\n\t\t\t\t/* onRef={ref => this.chart = ref} */\r\n\t\t\t/>\r\n\t\t\t{/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\r\n            <h2>Test Data:</h2>\r\n            {this.state.clinicalData.map(eachEntry=><TableCreator item={eachEntry} patientId={this.state.id} key={eachEntry.id} />)}\r\n        </div>)\r\n    }\r\n}\r\n\r\nclass TableCreator extends React.Component{\r\n    render(){\r\n        var eachEntry = this.props.item;\r\n        var patientId = this.props.componentId;\r\n        return <div>\r\n            <h1>{eachEntry.componentName}</h1>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nexport default ChartGenerator;"]},"metadata":{},"sourceType":"module"}