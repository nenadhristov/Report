{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjects\\\\clinicalsapp\\\\src\\\\components\\\\ChartGenerator.js\";\nimport React from 'react';\nimport CanvasJSReact from '../assets/canvasjs.react'; //var CanvasJSReact = require('./canvasjs.react');\n\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass ChartGenerator extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clinicalData: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/clinicalservices/api/clinicals/1/bp\").then(res => {\n      this.setState(res.data);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Test Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), this.state.clinicalData.map(eachEntry => /*#__PURE__*/_jsxDEV(TableCreator, {\n        item: eachEntry,\n        componentId: this.state.id\n      }, eachEntry.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 53\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nclass TableCreator extends React.Component {\n  render() {\n    var eachEntry = this.props.item;\n    var patientId = this.props.componentId;\n    return;\n\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: eachEntry.componentName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default ChartGenerator;","map":{"version":3,"sources":["D:/ReactProjects/clinicalsapp/src/components/ChartGenerator.js"],"names":["React","CanvasJSReact","axios","CanvasJS","CanvasJSChart","ChartGenerator","Component","state","clinicalData","componentDidMount","get","then","res","setState","data","render","map","eachEntry","id","TableCreator","props","item","patientId","componentId","componentName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,0BAA1B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,IAAIC,QAAQ,GAAGF,aAAa,CAACE,QAA7B;AACA,IAAIC,aAAa,GAAGH,aAAa,CAACG,aAAlC;;AACA,MAAMC,cAAN,SAA6BL,KAAK,CAACM,SAAnC,CAA4C;AAAA;AAAA;AAAA,SAExCC,KAFwC,GAElC;AACFC,MAAAA,YAAY,EAAC;AADX,KAFkC;AAAA;;AAMxCC,EAAAA,iBAAiB,GAAE;AACfP,IAAAA,KAAK,CAACQ,GAAN,CAAU,2DAAV,EACCC,IADD,CACMC,GAAG,IAAE;AAEP,WAAKC,QAAL,CAAcD,GAAG,CAACE,IAAlB;AACH,KAJD;AAMH;;AAGDC,EAAAA,MAAM,GAAE;AAEJ,wBAAQ;AAAA,8BAGJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHI,EAIH,KAAKR,KAAL,CAAWC,YAAX,CAAwBQ,GAAxB,CAA4BC,SAAS,iBAAE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAEA,SAApB;AAA+B,QAAA,WAAW,EAAE,KAAKV,KAAL,CAAWW;AAAvD,SAAgED,SAAS,CAACC,EAA1E;AAAA;AAAA;AAAA;AAAA,cAAvC,CAJG;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAMH;;AAxBuC;;AA2B5C,MAAMC,YAAN,SAA2BnB,KAAK,CAACM,SAAjC,CAA0C;AACtCS,EAAAA,MAAM,GAAE;AACJ,QAAIE,SAAS,GAAG,KAAKG,KAAL,CAAWC,IAA3B;AACA,QAAIC,SAAS,GAAG,KAAKF,KAAL,CAAWG,WAA3B;AACA;;AACA;AAAA;AAAA,6BACI;AAAA,kBAAKN,SAAS,CAACO;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAGH;;AARqC;;AAY1C,eAAenB,cAAf","sourcesContent":["import React from 'react';\r\nimport CanvasJSReact from '../assets/canvasjs.react';\r\n//var CanvasJSReact = require('./canvasjs.react');\r\nimport axios from 'axios';\r\nvar CanvasJS = CanvasJSReact.CanvasJS;\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\nclass ChartGenerator extends React.Component{\r\n\r\n    state={\r\n        clinicalData:[]\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get(\"http://localhost:8080/clinicalservices/api/clinicals/1/bp\")\r\n        .then(res=>{\r\n\r\n            this.setState(res.data);\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        return (<div>\r\n                \r\n\t\t\t{/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\r\n            <h2>Test Data:</h2>\r\n            {this.state.clinicalData.map(eachEntry=><TableCreator item={eachEntry} componentId={this.state.id} key={eachEntry.id} />)}\r\n        </div>)\r\n    }\r\n}\r\n\r\nclass TableCreator extends React.Component{\r\n    render(){\r\n        var eachEntry = this.props.item;\r\n        var patientId = this.props.componentId;\r\n        return \r\n        <div>\r\n            <h1>{eachEntry.componentName}</h1>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nexport default ChartGenerator;"]},"metadata":{},"sourceType":"module"}