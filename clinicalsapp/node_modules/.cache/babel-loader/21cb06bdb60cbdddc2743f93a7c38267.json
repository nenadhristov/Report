{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjects\\\\clinicalsapp\\\\src\\\\components\\\\ChartGenerator.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ChartGenerator extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clinicalData: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/clinicalservices/api/clinicals/1/bp\").then(res => {\n      this.setState(res.data);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Patient Details:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), \"First Name: \", this.state.firstName, \"Last Name: \", this.state.lastName, \"Age: \", this.state.age, /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Clinical Report:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), this.state.clinicalData.map(eachEntry => /*#__PURE__*/_jsxDEV(TableCreator, {\n        item: eachEntry,\n        patientId: this.state.id\n      }, eachEntry.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 53\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default ChartGenerator;","map":{"version":3,"sources":["D:/ReactProjects/clinicalsapp/src/components/ChartGenerator.js"],"names":["React","axios","ChartGenerator","Component","state","clinicalData","componentDidMount","get","then","res","setState","data","render","firstName","lastName","age","map","eachEntry","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,cAAN,SAA6BF,KAAK,CAACG,SAAnC,CAA4C;AAAA;AAAA;AAAA,SAExCC,KAFwC,GAElC;AACFC,MAAAA,YAAY,EAAC;AADX,KAFkC;AAAA;;AAMxCC,EAAAA,iBAAiB,GAAE;AACfL,IAAAA,KAAK,CAACM,GAAN,CAAU,2DAAV,EAAuEC,IAAvE,CAA4EC,GAAG,IAAE;AAC7E,WAAKC,QAAL,CAAcD,GAAG,CAACE,IAAlB;AACH,KAFD;AAIH;;AAGDC,EAAAA,MAAM,GAAE;AACJ,wBAAQ;AAAA,8BACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADI,kBAES,KAAKR,KAAL,CAAWS,SAFpB,iBAGQ,KAAKT,KAAL,CAAWU,QAHnB,WAIE,KAAKV,KAAL,CAAWW,GAJb,eAKJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALI,EAMH,KAAKX,KAAL,CAAWC,YAAX,CAAwBW,GAAxB,CAA4BC,SAAS,iBAAE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAEA,SAApB;AAA+B,QAAA,SAAS,EAAE,KAAKb,KAAL,CAAWc;AAArD,SAA8DD,SAAS,CAACC,EAAxE;AAAA;AAAA;AAAA;AAAA,cAAvC,CANG;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AASH;;AAxBuC;;AA4B5C,eAAehB,cAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nclass ChartGenerator extends React.Component{\r\n\r\n    state={\r\n        clinicalData:[]\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get(\"http://localhost:8080/clinicalservices/api/clinicals/1/bp\").then(res=>{\r\n            this.setState(res.data);\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return (<div>\r\n            <h2>Patient Details:</h2>\r\n            First Name: {this.state.firstName}\r\n            Last Name: {this.state.lastName}\r\n            Age: {this.state.age}\r\n            <h2>Clinical Report:</h2>\r\n            {this.state.clinicalData.map(eachEntry=><TableCreator item={eachEntry} patientId={this.state.id} key={eachEntry.id} />)}\r\n\r\n        </div>)\r\n    }\r\n}\r\n\r\n\r\nexport default ChartGenerator;"]},"metadata":{},"sourceType":"module"}