{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjects\\\\clinicalsapp\\\\src\\\\components\\\\ChartGenerator.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ChartGenerator extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/clinicalservices/api/clinicals/\" + this.props.match.params.patientId + \"/\" + this.props.match.params.componentName).then(res => {\n      this.setState(res.data);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Clinical Report:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), this.state.clinicalData.map((item, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [item.componentValue, \",\", item.componentName]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default ChartGenerator;","map":{"version":3,"sources":["D:/ReactProjects/clinicalsapp/src/components/ChartGenerator.js"],"names":["React","axios","ChartGenerator","Component","state","componentDidMount","get","props","match","params","patientId","componentName","then","res","setState","data","render","clinicalData","map","item","index","componentValue"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,cAAN,SAA6BF,KAAK,CAACG,SAAnC,CAA4C;AAAA;AAAA;AAAA,SAExCC,KAFwC,GAElC,EAFkC;AAAA;;AAMxCC,EAAAA,iBAAiB,GAAE;AACfJ,IAAAA,KAAK,CAACK,GAAN,CAAU,0DAAwD,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,SAAhF,GAA0F,GAA1F,GAA8F,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBE,aAAhI,EAA+IC,IAA/I,CAAoJC,GAAG,IAAE;AAErJ,WAAKC,QAAL,CAAcD,GAAG,CAACE,IAAlB;AACH,KAHD;AAKH;;AAGDC,EAAAA,MAAM,GAAE;AACJ,wBAAQ;AAAA,8BACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADI,EAEH,KAAKZ,KAAL,CAAWa,YAAX,CAAwBC,GAAxB,CAA4B,CAACC,IAAD,EAAMC,KAAN,kBACzB;AAAA,mBAAgBD,IAAI,CAACE,cAArB,OAAsCF,IAAI,CAACR,aAA3C;AAAA,SAAQS,KAAR;AAAA;AAAA;AAAA;AAAA,cADH,CAFG;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAQH;;AAxBuC;;AA6B5C,eAAelB,cAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nclass ChartGenerator extends React.Component{\r\n\r\n    state={\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get(\"http://localhost:8080/clinicalservices/api/clinicals/\"+this.props.match.params.patientId+\"/\"+this.props.match.params.componentName).then(res=>{\r\n\r\n            this.setState(res.data);\r\n        })\r\n\r\n    }\r\n\r\n\r\n    render(){\r\n        return (<div>\r\n            <h2>Clinical Report:</h2>\r\n            {this.state.clinicalData.map((item,index)=>(\r\n                <p key={index}>{item.componentValue},{item.componentName}</p>\r\n                \r\n            ))}\r\n\r\n        </div>);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ChartGenerator;"]},"metadata":{},"sourceType":"module"}