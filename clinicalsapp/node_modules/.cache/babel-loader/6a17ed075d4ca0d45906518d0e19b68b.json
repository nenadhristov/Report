{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjects\\\\clinicalsapp\\\\src\\\\components\\\\ChartGenerator.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Line } from 'react-chartjs-2';\nimport '../css/ChartGenerator.css';\nimport { Button, Container, Row, Col, Alert, Table, Navbar, Nav, NavDropdown, Carousel } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ChartGenerator extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clinicalData: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/clinicalservices/api/clinicals/\" + this.props.match.params.patientId + \"/\" + this.props.match.params.componentName).then(res => {\n      this.setState({\n        clinicalData: res.data\n      });\n    });\n  }\n\n  render() {\n    var ime = \"\";\n    var ime1 = \"\";\n    var ime2 = \"\";\n\n    if (this.props.match.params.componentName === \"bp\") {\n      ime = \"Blood Pressure\";\n      ime1 = \"Systolic\";\n      ime2 = \"Dystolic\";\n    } else if (this.props.match.params.componentName === \"hw\") {\n      ime = \"Height/Weight\";\n      ime1 = \"Height\";\n      ime2 = \"Weight\";\n    } else if (this.props.match.params.componentName === \"heartrate\") {\n      ime = \"HeartRate\";\n      ime1 = \"Beats Per Minute\";\n    } else {\n      ime = \"Body Mass Index\";\n      ime1 = \"kg/m2\";\n    }\n\n    var Vreme = new Array();\n    var myArray = new Array();\n    this.state.clinicalData.map((item, index) => {\n      if (item.componentName === this.props.match.params.componentName) {\n        myArray.push(item.componentValue);\n        Vreme.push(item.measuredDateTime);\n      }\n    });\n    var VisokPritisok = new Array();\n    var NizokPritisok = new Array();\n    myArray.forEach(element => VisokPritisok.push(element.split('/')[0]));\n    myArray.forEach(element => NizokPritisok.push(element.split('/')[1]));\n\n    function LineChart() {\n      const type = {\n        type: 'line'\n      };\n      const data = {\n        labels: Vreme,\n        datasets: [{\n          label: ime1,\n          data: VisokPritisok,\n          borderColor: ['rgba(255,206,86 ,0.2)'],\n          backgroundColor: ['rgba(240,128,128 ,0.5)'],\n          pointBackgroundColor: 'rgba(255,206,86 ,0.2)',\n          pointBorderColor: 'rgba(255,206,86 ,0.2))'\n        }, {\n          label: ime2,\n          data: NizokPritisok,\n          borderColor: ['rgba(54,162,235 ,0.2)'],\n          backgroundColor: ['rgba(54,162,235 ,1)'],\n          pointBackgroundColor: 'rgba(54,162,235 ,0.2)',\n          pointBorderColor: 'rgba(54,162,235 ,0.2)'\n        }]\n      };\n      const options = {\n        title: {\n          display: true,\n          color: ('dark', '#090908'),\n          text: ime,\n          fontSize: \"40\",\n          bold: true\n        }\n      };\n      return /*#__PURE__*/_jsxDEV(Line, {\n        type: type,\n        data: data,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"ChartGenerator-component\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        collapseOnSelect: true,\n        expand: \"lg\",\n        bg: \"dark\",\n        variant: \"dark\",\n        children: /*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          className: \"mx-5\",\n          href: \"/\",\n          style: {\n            color: '#5bc0de'\n          },\n          children: \"Neno's Clinic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        id: \"custom-container\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-center mt-5\",\n          children: /*#__PURE__*/_jsxDEV(LineChart, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default ChartGenerator;","map":{"version":3,"sources":["D:/ReactProjects/clinicalsapp/src/components/ChartGenerator.js"],"names":["React","axios","Line","Button","Container","Row","Col","Alert","Table","Navbar","Nav","NavDropdown","Carousel","ChartGenerator","Component","state","clinicalData","componentDidMount","get","props","match","params","patientId","componentName","then","res","setState","data","render","ime","ime1","ime2","Vreme","Array","myArray","map","item","index","push","componentValue","measuredDateTime","VisokPritisok","NizokPritisok","forEach","element","split","LineChart","type","labels","datasets","label","borderColor","backgroundColor","pointBackgroundColor","pointBorderColor","options","title","display","color","text","fontSize","bold"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAO,2BAAP;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,GAA5B,EAAiCC,GAAjC,EAAsCC,KAAtC,EAA6CC,KAA7C,EAAoDC,MAApD,EAA4DC,GAA5D,EAAiEC,WAAjE,EAA8EC,QAA9E,QAA8F,iBAA9F;;;AACA,MAAMC,cAAN,SAA6Bb,KAAK,CAACc,SAAnC,CAA4C;AAAA;AAAA;AAAA,SAExCC,KAFwC,GAElC;AACFC,MAAAA,YAAY,EAAC;AADX,KAFkC;AAAA;;AAYxCC,EAAAA,iBAAiB,GAAE;AAEfhB,IAAAA,KAAK,CAACiB,GAAN,CAAU,0DAAwD,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,SAAhF,GAA0F,GAA1F,GAA8F,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBE,aAAhI,EAA+IC,IAA/I,CAAoJC,GAAG,IAAE;AAErJ,WAAKC,QAAL,CAAc;AAAEV,QAAAA,YAAY,EAAES,GAAG,CAACE;AAApB,OAAd;AACH,KAHD;AAKH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,QAAIC,GAAG,GAAE,EAAT;AACA,QAAIC,IAAI,GAAC,EAAT;AACA,QAAIC,IAAI,GAAC,EAAT;;AAEA,QAAG,KAAKZ,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBE,aAAxB,KAAwC,IAA3C,EAAgD;AAC3CM,MAAAA,GAAG,GAAC,gBAAJ;AACAC,MAAAA,IAAI,GAAC,UAAL;AACAC,MAAAA,IAAI,GAAC,UAAL;AACJ,KAJD,MAIM,IAAG,KAAKZ,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBE,aAAxB,KAAwC,IAA3C,EAAgD;AAClDM,MAAAA,GAAG,GAAC,eAAJ;AACAC,MAAAA,IAAI,GAAC,QAAL;AACAC,MAAAA,IAAI,GAAC,QAAL;AACH,KAJK,MAIA,IAAG,KAAKZ,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBE,aAAxB,KAAwC,WAA3C,EAAuD;AACzDM,MAAAA,GAAG,GAAC,WAAJ;AACAC,MAAAA,IAAI,GAAC,kBAAL;AACH,KAHK,MAGD;AACDD,MAAAA,GAAG,GAAC,iBAAJ;AACAC,MAAAA,IAAI,GAAC,OAAL;AACH;;AAED,QAAIE,KAAK,GAAG,IAAIC,KAAJ,EAAZ;AACA,QAAIC,OAAO,GAAG,IAAID,KAAJ,EAAd;AACA,SAAKlB,KAAL,CAAWC,YAAX,CAAwBmB,GAAxB,CAA4B,CAACC,IAAD,EAAMC,KAAN,KAAc;AACtC,UAAGD,IAAI,CAACb,aAAL,KAAqB,KAAKJ,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBE,aAAhD,EAA8D;AAC9DW,QAAAA,OAAO,CAACI,IAAR,CAAaF,IAAI,CAACG,cAAlB;AACAP,QAAAA,KAAK,CAACM,IAAN,CAAWF,IAAI,CAACI,gBAAhB;AACC;AACJ,KALD;AAOA,QAAIC,aAAa,GAAG,IAAIR,KAAJ,EAApB;AACA,QAAIS,aAAa,GAAG,IAAIT,KAAJ,EAApB;AACAC,IAAAA,OAAO,CAACS,OAAR,CAAgBC,OAAO,IACnBH,aAAa,CAACH,IAAd,CAAmBM,OAAO,CAACC,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAnB,CADJ;AAIAX,IAAAA,OAAO,CAACS,OAAR,CAAgBC,OAAO,IACnBF,aAAa,CAACJ,IAAd,CAAmBM,OAAO,CAACC,KAAR,CAAc,GAAd,EAAmB,CAAnB,CAAnB,CADJ;;AAKA,aAASC,SAAT,GAAoB;AAChB,YAAMC,IAAI,GAAC;AAEPA,QAAAA,IAAI,EAAE;AAFC,OAAX;AAIA,YAAMpB,IAAI,GAAG;AACTqB,QAAAA,MAAM,EAAChB,KADE;AAETiB,QAAAA,QAAQ,EAAC,CACL;AACIC,UAAAA,KAAK,EAACpB,IADV;AAEIH,UAAAA,IAAI,EAACc,aAFT;AAGIU,UAAAA,WAAW,EAAE,CAAC,uBAAD,CAHjB;AAIIC,UAAAA,eAAe,EAAC,CAAC,wBAAD,CAJpB;AAKIC,UAAAA,oBAAoB,EAAC,uBALzB;AAMIC,UAAAA,gBAAgB,EAAC;AANrB,SADK,EASL;AACIJ,UAAAA,KAAK,EAACnB,IADV;AAEIJ,UAAAA,IAAI,EAACe,aAFT;AAGIS,UAAAA,WAAW,EAAE,CAAC,uBAAD,CAHjB;AAIIC,UAAAA,eAAe,EAAC,CAAC,qBAAD,CAJpB;AAKIC,UAAAA,oBAAoB,EAAC,uBALzB;AAMIC,UAAAA,gBAAgB,EAAC;AANrB,SATK;AAFA,OAAb;AAsBA,YAAMC,OAAO,GAAE;AACXC,QAAAA,KAAK,EAAC;AACFC,UAAAA,OAAO,EAAE,IADP;AAEFC,UAAAA,KAAK,GAAE,QAAO,SAAT,CAFH;AAGFC,UAAAA,IAAI,EAAC9B,GAHH;AAIF+B,UAAAA,QAAQ,EAAC,IAJP;AAKFC,UAAAA,IAAI,EAAC;AALH;AADK,OAAf;AAaA,0BACI,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEd,IAAZ;AAAkB,QAAA,IAAI,EAAEpB,IAAxB;AAA8B,QAAA,OAAO,EAAE4B;AAAvC;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;;AAED,wBAAQ;AAAK,MAAA,KAAK,EAAC,0BAAX;AAAA,8BACQ,QAAC,MAAD;AAAQ,QAAA,gBAAgB,MAAxB;AAAyB,QAAA,MAAM,EAAC,IAAhC;AAAqC,QAAA,EAAE,EAAC,MAAxC;AAA+C,QAAA,OAAO,EAAC,MAAvD;AAAA,+BACJ,QAAC,MAAD,CAAQ,KAAR;AAAc,UAAA,SAAS,EAAC,MAAxB;AAA+B,UAAA,IAAI,EAAC,GAApC;AAAwC,UAAA,KAAK,EAAE;AAAEG,YAAAA,KAAK,EAAE;AAAT,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,cADR,eAII,QAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAiB,QAAA,EAAE,EAAC,kBAApB;AAAA,+BACA,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,6BAAf;AAAA,iCACA,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAUH;;AArHuC;;AA0H5C,eAAe7C,cAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Line } from 'react-chartjs-2';\r\nimport '../css/ChartGenerator.css';\r\nimport { Button, Container, Row, Col, Alert, Table, Navbar, Nav, NavDropdown, Carousel } from 'react-bootstrap';\r\nclass ChartGenerator extends React.Component{\r\n\r\n    state={\r\n        clinicalData:[]\r\n        \r\n    }\r\n    \r\n \r\n    \r\n    \r\n    \r\n\r\n    componentDidMount(){\r\n        \r\n        axios.get(\"http://localhost:8080/clinicalservices/api/clinicals/\"+this.props.match.params.patientId+\"/\"+this.props.match.params.componentName).then(res=>{\r\n\r\n            this.setState({ clinicalData: res.data });\r\n        })\r\n\r\n    }\r\n\r\n    render(){\r\n        var ime =\"\";\r\n        var ime1=\"\";\r\n        var ime2=\"\";\r\n\r\n        if(this.props.match.params.componentName===\"bp\"){\r\n             ime=\"Blood Pressure\";\r\n             ime1=\"Systolic\";\r\n             ime2=\"Dystolic\";\r\n        }else if(this.props.match.params.componentName===\"hw\"){\r\n            ime=\"Height/Weight\";\r\n            ime1=\"Height\";\r\n            ime2=\"Weight\"\r\n        }else if(this.props.match.params.componentName===\"heartrate\"){\r\n            ime=\"HeartRate\";\r\n            ime1=\"Beats Per Minute\";\r\n        }else{\r\n            ime=\"Body Mass Index\";\r\n            ime1=\"kg/m2\";\r\n        }\r\n\r\n        var Vreme = new Array();\r\n        var myArray = new Array();\r\n        this.state.clinicalData.map((item,index)=>{\r\n            if(item.componentName===this.props.match.params.componentName){\r\n            myArray.push(item.componentValue);\r\n            Vreme.push(item.measuredDateTime)\r\n            }\r\n        })\r\n        \r\n        var VisokPritisok = new Array();\r\n        var NizokPritisok = new Array();\r\n        myArray.forEach(element => \r\n            VisokPritisok.push(element.split('/')[0])\r\n            );\r\n\r\n        myArray.forEach(element => \r\n            NizokPritisok.push(element.split('/')[1])\r\n                 );\r\n\r\n\r\n        function LineChart(){\r\n            const type={\r\n\r\n                type: 'line'\r\n            }\r\n            const data = {\r\n                labels:Vreme,\r\n                datasets:[\r\n                    {\r\n                        label:ime1,\r\n                        data:VisokPritisok,\r\n                        borderColor: ['rgba(255,206,86 ,0.2)'],     \r\n                        backgroundColor:['rgba(240,128,128 ,0.5)'],                \r\n                        pointBackgroundColor:'rgba(255,206,86 ,0.2)',\r\n                        pointBorderColor:'rgba(255,206,86 ,0.2))'\r\n                    },\r\n                    {\r\n                        label:ime2,\r\n                        data:NizokPritisok,\r\n                        borderColor: ['rgba(54,162,235 ,0.2)'],\r\n                        backgroundColor:['rgba(54,162,235 ,1)'], \r\n                        pointBackgroundColor:'rgba(54,162,235 ,0.2)',\r\n                        pointBorderColor:'rgba(54,162,235 ,0.2)'\r\n                    }\r\n                ]\r\n               \r\n            }\r\n            const options ={\r\n                title:{\r\n                    display: true,\r\n                    color:('dark','#090908'),\r\n                    text:ime,\r\n                    fontSize:\"40\",\r\n                    bold:true\r\n\r\n                }\r\n\r\n                \r\n\r\n            }\r\n            return(\r\n                <Line type={type} data={data} options={options}/>\r\n            )\r\n        }\r\n       \r\n        return (<div class=\"ChartGenerator-component\">    \r\n                        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand className=\"mx-5\" href=\"/\" style={{ color: '#5bc0de'}} >Neno's Clinic</Navbar.Brand>\r\n                    </Navbar>\r\n                    <Container fluid id=\"custom-container\">\r\n                    <Row className=\"justify-content-center mt-5\">  \r\n                    <LineChart></LineChart>\r\n                    </Row>\r\n                    </Container>\r\n        </div>);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default ChartGenerator;"]},"metadata":{},"sourceType":"module"}